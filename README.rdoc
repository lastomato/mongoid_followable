= mongoid_followable

== Installation

In console:
  gem install mongoid_followable
or in Gemfile:
  gem 'mongoid_followable', "~> 0.1.5"

== Usage

To make model followable you need to include Mongoid::Followable into your document;Meanwhile, you also need to include Mongoid::Follower in your follower model:
  class User
    include Mongoid::Document
    include Mongoid::Followable
    include Mongoid::Follower
  end

  class Group
    include Mongoid::Document
    include Mongoid::Followable
  end

You can set authorization:
  ...
    current_user.set_authorization('user', 'game') # now current_user cannot follow User and Game model
    current_user.unset_authorization('User', 'Game')

You can follow a model:

    @group = Group.new
    @group.save

    current_user.follow(@group)
    current_user.unfollow(@group)

You can also judge whether a model is a follower of another model or a model is a followee of another model:
    	
    current_user.follower_of?(@group)
    current_user.followee_of?(@group)

You can get a model's follower/followee count:

    current_user.followers_count
    current_user.followees_count

You can get a model's followers/followees:
    	
    User.followers_of(@group)
    User.followees_of(@group)

    @group.all_followers
    @user.all_followees

You can get a model's followers/followees by type

    @group.followers_by_type("user")
    @user.followees_by_type("group")

And their count:

    @group.followers_by_type("user")
    @group.followers_count_by_type("user")
    @user.followees_by_type("group")
    @user.followees_count_by_type("group")

You can also get a model's follow/followed history:

    @user.ever_follow
    @group.ever_followed
  ...
    
* Any bug or issue, please send me an email: ustc.flyingfox@gmail.com

== TODO

* inter-models followable #FINISHED#
* divide into two parts: followable(being followed) and follower(following others) #FINISHED#
* following history/followed history
* most/least followed/following
* add authorization to followable models
* follow part of model like only following tags updation of an article etc(is this necessary?)

== Thanks

Thanks the author(s) of acts_as_followable, you can find this gem here[https://github.com/xpepermint/acts_as_followable]

== Copyright

Copyright (c) Jie Fan. See LICENSE.txt for further details.    
